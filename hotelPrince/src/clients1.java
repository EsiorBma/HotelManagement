/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import clients.*;
import Menu.Menu;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static DataBase.ConnectionBd.*;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.ByteArrayInputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author prince
 */
public class clients1 extends javax.swing.JInternalFrame  {

    PreparedStatement pst;
    ResultSet rs;
    String path2 = null;

    /**
     * Creates new form clients
     */
    public clients1() {
        initComponents();
        Connect();
        Table();
        txtcategorie.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                // Vérifier si la catégorie "VIP" est sélectionnée
                if (txtcategorie.getSelectedItem().equals("VIP")) {
                    // Activer le bouton
                    addTof.setEnabled(true);
                } else {
                    // Désactiver le bouton
                    addTof.setEnabled(false);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtnom = new javax.swing.JTextField();
        txtprenom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txttel = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        AddCustomer = new javax.swing.JButton();
        DeleteCustomer = new javax.swing.JButton();
        ModifyCustomer = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        searchclient = new javax.swing.JTextField();
        txtcarte = new javax.swing.JComboBox<>();
        txtnationalite = new javax.swing.JComboBox<>();
        txtcategorie = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        txtphoto = new javax.swing.JLabel();
        lblphoto = new javax.swing.JLabel();
        addTof = new javax.swing.JButton();
        RESET = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator1.setForeground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("C059", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clients/customer_person_people_man_you_1625.png"))); // NOI18N
        jLabel1.setText("INFORMATIONS SUR LES CLIENTS !!!");

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(51, 153, 255));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("NOM");

        txtnom.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtnom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtnom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnomKeyPressed(evt);
            }
        });

        txtprenom.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtprenom.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtprenom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtprenomKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PRÉNOM");

        jLabel4.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("NATIONALITÉ");

        jLabel5.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TÉLÉPHONE");

        txttel.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txttel.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CARTE FIDÉLITÉ");

        jLabel7.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("CATÉGORIE");

        AddCustomer.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        AddCustomer.setText("AJOUTER");
        AddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustomerActionPerformed(evt);
            }
        });

        DeleteCustomer.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        DeleteCustomer.setText("SUPPRIMER");
        DeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCustomerActionPerformed(evt);
            }
        });

        ModifyCustomer.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        ModifyCustomer.setText("MODIFIER");
        ModifyCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyCustomerActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clients/client_img/find_users_applications_search_2908.png"))); // NOI18N
        jLabel8.setText("RECHERCHER");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchclient.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        searchclient.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchclient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchclientKeyPressed(evt);
            }
        });

        txtcarte.setFont(new java.awt.Font("P052", 1, 18)); // NOI18N
        txtcarte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NON", "OUI" }));
        txtcarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcarteActionPerformed(evt);
            }
        });

        txtnationalite.setFont(new java.awt.Font("P052", 1, 18)); // NOI18N
        txtnationalite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afghanistan", "Afrique du Sud", "Albanie", "Algérie", "Allemagne", "Andorre", "Angola", "Antigua-et-Barbuda", "Arabie saoudite", "Argentine", "Arménie", "Australie", "Autriche", "Azerbaïdjan", "Bahamas", "Bahreïn", "Bangladesh", "Barbade", "Bélarus (Biélorussie)", "Belgique", "Belize", "Bénin", "Bhoutan", "Bolivie", "Bosnie-Herzégovine", "Botswana", "Brésil", "Brunei", "Bulgarie", "Burkina Faso", "Burundi", "Cambodge", "Cameroun", "Canada", "Cap-Vert", "Chili", "Chine", "Chypre", "Colombie", "Comores", "Congo-Brazzaville (République du Congo)", "Congo-Kinshasa (République démocratique du Congo)", "Corée du Nord", "Corée du Sud", "Costa Rica", "Côte d'Ivoire", "Croatie", "Cuba", "Danemark", "Djibouti", "Dominique", "Égypte", "Émirats arabes unis", "Équateur", "Érythrée", "Espagne", "Estonie", "Eswatini (anciennement Swaziland)", "États-Unis", "Éthiopie", "Fidji", "Finlande", "France", "Gabon", "Gambie", "Géorgie", "Ghana", "Grèce", "Grenade", "Guatemala", "Guinée", "Guinée-Bissau", "Guinée équatoriale", "Guyana", "Haïti", "Honduras", "Hongrie", "Îles Cook", "Îles Marshall", "Îles Salomon ", "Inde ", "Indonésie ", "Irak ", "Iran ", "Irlande ", "Islande ", "Israël ", "Italie ", "Jamaïque ", "Japon ", "Jordanie ", "Kazakhstan ", "Kenya ", "Kirghizistan ", "Kiribati ", "Koweït ", "Laos ", "Lesotho ", "Lettonie ", "Liban ", "Libéria ", "Libye ", "Liechtenstein ", "Lituanie ", "Luxembourg ", "Macédoine du Nord (anciennement ex-République yougoslave de Macédoine) ", "Madagascar ", "Malaisie ", "Malawi ", "Maldives ", "Mali ", "Malte ", "Maroc ", "Maurice ", "Mauritanie ", "Mexique ", "Micronésie ", "Moldavie ", "Monaco ", "Mongolie ", "Monténégro ", "Mozambique", "Myanmar (Birmanie) ", "Namibie ", "Nauru", "Népal", "Nicaragua", "Niger", "Nigéria", "Niue", "Norvège", "Nouvelle-Zélande", "Oman", "Ouganda", "Ouzbékistan", "Pakistan", "Palaos", "Palestine", "Panama", "Papouasie-Nouvelle-Guinée", "Paraguay", "Pays-Bas", "Pérou", "Philippines", "Pologne", "Portugal", "Qatar", "République centrafricaine", "République dominicaine", "République tchèque", "Roumanie", "Royaume-Uni", "Russie", "Rwanda", "Saint-Christophe-et-Niévès", "Saint-Marin", "Saint-Vincent-et-les Grenadines", "Sainte-Lucie", "Salvador", "Samoa", "Sao Tomé-et-Principe", "Sénégal", "Serbie", "Seychelles", "Sierra Leone", "Singapour", "Slovaquie", "Slovénie", "Somalie", "Soudan", "Soudan du Sud", "Sri Lanka", "Suède", "Suisse", "Suriname", "Syrie", "Tadjikistan", "Tanzanie", "Tchad", "Thaïlande", "Timor-Leste (Timor oriental)", "Togo", "Tonga", "Trinité-et-Tobago", "Tunisie", "Turkménistan", "Turquie", "Tuvalu", "Ukraine", "Uruguay", "Vanuatu", "Vatican (Saint-Siège)", "Venezuela", "Viêt Nam", "Yémen", "Zambie", "Zimbabwe" }));
        txtnationalite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnationaliteActionPerformed(evt);
            }
        });

        txtcategorie.setFont(new java.awt.Font("P052", 1, 18)); // NOI18N
        txtcategorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AFFAIRES", "PRIVÉS", "GROUPES", "TOPS", "VIP", "AUTRES" }));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 0));
        jButton1.setText("MENU");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblphoto.setBackground(new java.awt.Color(255, 255, 255));
        lblphoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblphoto.setToolTipText("VEUILLEZ AJOUTER UNE BELLE PHOTO");
        lblphoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        lblphoto.setOpaque(true);

        addTof.setFont(new java.awt.Font("C059", 1, 14)); // NOI18N
        addTof.setText("Ajouter une photo");
        addTof.setEnabled(false);
        addTof.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTofActionPerformed(evt);
            }
        });

        RESET.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        RESET.setText("RESET");
        RESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESETActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtnom, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtprenom, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txttel)
                                .addComponent(txtnationalite, javax.swing.GroupLayout.Alignment.TRAILING, 0, 198, Short.MAX_VALUE)
                                .addComponent(txtcategorie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtcarte, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RESET, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ModifyCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DeleteCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addTof))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(searchclient, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(213, 213, 213))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtnom, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtprenom, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(addTof, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnationalite, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcarte, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ModifyCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(RESET, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchclient)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 1202, 682);
    }// </editor-fold>//GEN-END:initComponents

    private void txtcarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcarteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcarteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Si l'utilisateur clique sur le bouton "MENUE" , il sera automatiquement renvoyé sur le menue
        clients1.super.dispose();
        Menu m = new Menu();
        m.setVisible(true);

        /* La méthode dispose de la classe clients pour libérer les ressources  utilisés par la fenêtre, notamment la fermer  !!!
        Ensuite, une nouvelle instance de la classe "Menu" est créée et rendue visible avec la ligne
        "Menu m = new Menu(); m.setVisible(true);".
         */
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustomerActionPerformed
        // TODO add your handling code here:
        Connect();
        String name = txtnom.getText();
        String firstname = txtprenom.getText();
        String telephone = txttel.getText();
        
        if("".equals(name) || "".equals(firstname) || "".equals(telephone)){
            JOptionPane.showMessageDialog(null, "Informations incomplètes !!!");
        }else{
            try {

                pst = con.prepareStatement("INSERT INTO clients VALUES (null,?, ?, ?, ?, ?, ?);", Statement.RETURN_GENERATED_KEYS);

                pst.setString(1, txtnom.getText());
                pst.setString(2, txtprenom.getText());
                pst.setString(3, txttel.getText());
                pst.setString(4, txtnationalite.getSelectedItem().toString());
                pst.setString(5, txtcategorie.getSelectedItem().toString());
                pst.setString(6, txtcarte.getSelectedItem().toString());

                pst.executeUpdate();

                ResultSet rl = pst.getGeneratedKeys();
                int cl_id = 0;
                if (rl.next()) {
                    cl_id = rl.getInt(1); // Recuperer l'ID généré
                }

                pst.close();
                if (txtcategorie.getSelectedItem().equals("VIP")) {

                    InputStream is = new FileInputStream(new File(path2));

                    PreparedStatement ps = con.prepareStatement("INSERT INTO photos_vip VALUES (null, ?, ?);");
                    ps.setInt(1, cl_id);
                    ps.setBlob(2, is);
                    ps.execute();

                }
                Table();
                JOptionPane.showMessageDialog(null, "Votre client a bien été ajouté !");
                con.close();
                lblphoto.setIcon(null);
                RestData();

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage());
            }
        }
        
        
    }//GEN-LAST:event_AddCustomerActionPerformed

    private void ModifyCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyCustomerActionPerformed
        // TODO add your handling code here:
        Connect();
        int index = jTable1.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!
        if (index < 0) {
            JOptionPane.showMessageDialog(null, "\n Veuillez d'abord séllectionner un client !!! \n");
        } else {

            DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
            int id = Integer.parseInt(mod.getValueAt(index, 0).toString());
            try {

                pst = con.prepareStatement("UPDATE clients SET  nom = ?, prenom = ?,telephone = ?, nationalite = ? , categorie = ? , carte_fidelite = ? WHERE client_id = ?;");

                pst.setString(1, txtnom.getText());
                pst.setString(2, txtprenom.getText());
                pst.setString(3, txttel.getText());
                pst.setString(4, txtnationalite.getSelectedItem().toString());
                pst.setString(5, txtcategorie.getSelectedItem().toString());
                pst.setString(6, txtcarte.getSelectedItem().toString());
                pst.setInt(7, id);

                pst.executeUpdate();
                if (txtcategorie.getSelectedItem().equals("VIP")) {

                    // Récupération de la photo de la base de données
                    String sql = "UPDATE photos_vip SET  photo = ? WHERE client_id = ? ;";
                    String sql2 = "SELECT photo FROM photos_vip WHERE client_id = ? ;";
                    InputStream is = new FileInputStream(new File(path2));
                    try {
                        PreparedStatement pt = con.prepareStatement(sql);
                        pt.setBlob(1, is);
                        pt.setInt(2, id);
                        pt.executeUpdate();

                        // Récupération et affichage de la photo depuis la base de données (corrigé)
                        PreparedStatement pt2 = con.prepareStatement(sql2);
                        pt2.setInt(1, id);
                        ResultSet r = pt2.executeQuery();
                        if (r.next()) {
                            byte[] photo = r.getBytes("photo");
                            ImageIcon icon = new ImageIcon(photo);
                            lblphoto.setIcon(icon);
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }

                }
                JOptionPane.showMessageDialog(null, "\n MODIFICATION RÉUSSIE !!!");
                Table();
                pst.close();
                lblphoto.setIcon(null);
                RestData();
                //con.close();

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage());
            }
        }

    }//GEN-LAST:event_ModifyCustomerActionPerformed

    private void DeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCustomerActionPerformed
        // TODO add your handling code here:
        Connect();
        int index = jTable1.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!

        if (index < 0) {
            JOptionPane.showMessageDialog(null, "\n Veuillez d'abord séllectionner un client !!! \n");
        } else {
            DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
            int id = Integer.parseInt(mod.getValueAt(index, 0).toString());
            int dialogResult = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer cette donnée ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            System.out.println(" " + dialogResult);
            if (dialogResult == JOptionPane.YES_OPTION) {
                try {

                    pst = con.prepareStatement("DELETE FROM clients WHERE client_id = ? ;");
                    pst.setInt(1, id);
                    pst.executeUpdate();
                    pst = con.prepareStatement("ALTER TABLE clients AUTO_INCREMENT = 0 ;");
                    pst.executeUpdate();
                    pst.close();
                    JOptionPane.showMessageDialog(null, "Client supprimé !");
                    Table();
                    con.close();
                    lblphoto.setIcon(null);
                    RestData();
                } catch (HeadlessException | SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, " " + e.getMessage());
                }
            }
        }

    }//GEN-LAST:event_DeleteCustomerActionPerformed

    public void RestData() {
        txtnom.setText("");
        txtprenom.setText("");
        txttel.setText("");
        txtnationalite.setSelectedIndex(0);
        txtcategorie.setSelectedIndex(0);
        txtcarte.setSelectedIndex(0);
    }
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        Connect();
        int index = jTable1.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!
        DefaultTableModel mod = (DefaultTableModel) jTable1.getModel();
        txtnom.setText(mod.getValueAt(index, 1).toString());
        txtprenom.setText(mod.getValueAt(index, 2).toString());
        txttel.setText(mod.getValueAt(index, 3).toString());
        txtnationalite.setSelectedItem(mod.getValueAt(index, 4).toString());
        txtcategorie.setSelectedItem(mod.getValueAt(index, 5).toString());
//        txtcarte.setSelectedItem(mod.getValueAt(index, 6).toString());

        // Récupérer l'ID du client
        int cl_id = Integer.parseInt(mod.getValueAt(index, 0).toString());

        try {
            // Récupération de la carte_fidelite de la base de données
            String sql = "SELECT carte_fidelite FROM clients WHERE client_id = ?";
            PreparedStatement pd = con.prepareStatement(sql);
            pd.setInt(1, cl_id);
            ResultSet r = pd.executeQuery();
            if (r.next()) {
                // Récupérer la carte_fidelite du ResultSet
                String carte_fidelite = r.getString("carte_fidelite");

                // Afficher la carte_fidelite dans le champ de texte
                txtcarte.setSelectedItem(carte_fidelite);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        if (txtcategorie.getSelectedItem().equals("VIP")) {

            // Récupération de la photo de la base de données
            String sql = "SELECT photo FROM photos_vip WHERE client_id = ?";
            try {
                PreparedStatement pt = con.prepareStatement(sql);
                pt.setInt(1, cl_id);
                ResultSet rt = pt.executeQuery();

                if (rt.next()) {
                    // Récupérer la photo du ResultSet
                    byte[] photo = rt.getBytes("photo");

                    // Convertir la photo en image
                    Image image = ImageIO.read(new ByteArrayInputStream(photo));

                    // Redimensionner l'image
                    Image scaledImage = image.getScaledInstance(174, 183, Image.SCALE_SMOOTH);

                    // Afficher l'image redimensionnée
                    lblphoto.setIcon(new ImageIcon(scaledImage));
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        } else {
            lblphoto.setIcon(null);
        }


    }//GEN-LAST:event_jTable1MouseReleased

    private void addTofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTofActionPerformed
        // TODO add your handling code here:

        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("/home/prince/Téléchargements/ClientsPhotos/")); // Définir le répertoire par défaut
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        //String path = f.getAbsolutePath();

        if (f != null) {
            String path = f.getAbsolutePath();

            try {
                BufferedImage bi = ImageIO.read(f);
                Image img = bi.getScaledInstance(174, 183, Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                lblphoto.setIcon(icon);

                path2 = path;
            } catch (IOException e) {
                Logger.getLogger(clients1.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            System.out.println("Aucun fichier n'a été sélectionné.");
            JOptionPane.showMessageDialog(null, "Aucun fichier n'a été sélectionné.");
        }

    }//GEN-LAST:event_addTofActionPerformed

    private void searchclientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchclientKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Table2();
        }
    }//GEN-LAST:event_searchclientKeyPressed

    private void RESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESETActionPerformed
        // TODO add your handling code here:
        RestData();
        lblphoto.setIcon(null);
    }//GEN-LAST:event_RESETActionPerformed

    private void txtnationaliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnationaliteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnationaliteActionPerformed

    private void txtnomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            txtprenom.requestFocus();
        }
    }//GEN-LAST:event_txtnomKeyPressed

    private void txtprenomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprenomKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txttel.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtprenomKeyPressed

    private void Table() {

        String[] clients = {"N°", "NOM", "PRÉNOM", "TÉLÉPHONE", "NATIONALITÉ", "CATÉGORIE"};
        String[] affiche = new String[11];
        DefaultTableModel mod = new DefaultTableModel(null, clients);

        try {

            Statement st = con.createStatement();
            rs = st.executeQuery("SELECT * FROM clients;");

            while (rs.next()) {
                affiche[0] = rs.getString("client_id");
                affiche[1] = rs.getString("nom");
                affiche[2] = rs.getString("prenom");
                affiche[3] = rs.getString("telephone");
                affiche[4] = rs.getString("nationalite");
                affiche[5] = rs.getString("categorie");
                affiche[6] = rs.getString("carte_fidelite");
                //affiche[7] = rs.getBlob("photo");

                mod.addRow(affiche);
            }

            jTable1.setModel(mod);

        } catch (Exception e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }

    }

    public void Table2() {
        String[] clients = {"N°", "NOM", "PRÉNOM", "TÉLÉPHONE", "NATIONALITÉ", "CATÉGORIE"};
        String[] affiche = new String[11];
        DefaultTableModel mod = new DefaultTableModel(null, clients);
        String clientSearch = searchclient.getText();
        ResultSet rst;

        if ("-1".equals(clientSearch)) {

            try {
                Statement s = con.createStatement();
                rst = s.executeQuery("SELECT * FROM clients ORDER BY client_id DESC");
                while (rst.next()) {
                    affiche[0] = rst.getString("client_id");
                    affiche[1] = rst.getString("nom");
                    affiche[2] = rst.getString("prenom");
                    affiche[3] = rst.getString("telephone");
                    affiche[4] = rst.getString("nationalite");
                    affiche[5] = rst.getString("categorie");
                    affiche[6] = rst.getString("carte_fidelite");

                    mod.addRow(affiche);
                }
                jTable1.setModel(mod);

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, " " + e.getMessage());
            }
        } else {
            try {
                pst = con.prepareStatement("SELECT * FROM clients WHERE (nom LIKE ?) OR (prenom LIKE ?) OR (nationalite LIKE ?) OR (categorie LIKE ?) ;");
                for (int i = 1; i < 5; i++) {
                    pst.setString(i, "%" + clientSearch + "%");
                }
                rst = pst.executeQuery();
                while (rst.next()) {
                    affiche[0] = rst.getString("client_id");
                    affiche[1] = rst.getString("nom");
                    affiche[2] = rst.getString("prenom");
                    affiche[3] = rst.getString("telephone");
                    affiche[4] = rst.getString("nationalite");
                    affiche[5] = rst.getString("categorie");
                    affiche[6] = rst.getString("carte_fidelite");

                    mod.addRow(affiche);
                }
                jTable1.setModel(mod);
            } catch (SQLException ex) {
                Logger.getLogger(clients1.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Sorry ! Erreur survenu lors de la recherche \n " + ex.getMessage());
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try static {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clients1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clients1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clients1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clients1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new clients1().setVisible(true);
            }
        });
    }
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCustomer;
    private javax.swing.JButton DeleteCustomer;
    private javax.swing.JButton ModifyCustomer;
    private javax.swing.JButton RESET;
    private javax.swing.JButton addTof;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblphoto;
    private javax.swing.JTextField searchclient;
    public javax.swing.JComboBox<String> txtcarte;
    public javax.swing.JComboBox<String> txtcategorie;
    public javax.swing.JComboBox<String> txtnationalite;
    public javax.swing.JTextField txtnom;
    private javax.swing.JLabel txtphoto;
    public javax.swing.JTextField txtprenom;
    public javax.swing.JTextField txttel;
    // End of variables declaration//GEN-END:variables

    private void setUndecorated(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
}
