/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ButonView;
import java.sql.*;
import static DataBase.ConnectionBd.*;
import java.awt.event.KeyEvent;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JRootPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
//import reservation.Abstract_reservation1;
//import reservation.ReservationModel1;
/**
 *
 * @author prince
 */
public class Reservations extends javax.swing.JInternalFrame {

    PreparedStatement pst;
    ResultSet rs;
    ReservationModel1 rm = new ReservationModel1();
    Abstract_reservation1 ab = new Abstract_reservation1() {
    };
    /**
     * Creates new form Reservations
     */
    public Reservations() {
        initComponents();
        initComponents();
        Connect();
        ab.Table(jTable1);
        remove_title_bar();
        coloumnWidth();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void remove_title_bar() {
        putClientProperty("Clients.isPalette", Boolean.TRUE);
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setBorder(null);
    }
    public void coloumnWidth() {
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(15);
        columnModel.getColumn(1).setPreferredWidth(22);
        columnModel.getColumn(2).setPreferredWidth(22);
        columnModel.getColumn(3).setPreferredWidth(80);
        columnModel.getColumn(4).setPreferredWidth(81);
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtclient = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtchambre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        AddReservation = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        date_ariv = new com.toedter.calendar.JDateChooser();
        date_dep = new com.toedter.calendar.JDateChooser();

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setForeground(new java.awt.Color(102, 0, 102));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 58, 1157, 26));

        jLabel1.setBackground(new java.awt.Color(100, 192, 47));
        jLabel1.setFont(new java.awt.Font("C059", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reservation/booking_hotel_icon_141823.png"))); // NOI18N
        jLabel1.setText("INFORMATIONS SUR LES RÉSERVATIONS !!!");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1160, 50));

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, 630, 278));

        txtclient.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtclient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtclientKeyPressed(evt);
            }
        });
        jPanel1.add(txtclient, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 190, 46));

        jLabel3.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CLIENT_Matricule");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 160, 46));

        jLabel4.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Date  d'arrivée");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 160, 46));

        jLabel5.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("CHAMBRE_N°");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 160, 46));

        txtchambre.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtchambre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtchambreKeyPressed(evt);
            }
        });
        jPanel1.add(txtchambre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 190, 46));

        jLabel7.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Date de départ");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 160, 46));

        AddReservation.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        AddReservation.setText("AJOUTER");
        AddReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReservationActionPerformed(evt);
            }
        });
        jPanel1.add(AddReservation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 120, 45));

        Delete.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Delete.setText("ANNULER");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, 130, 45));

        Update.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Update.setText("MODIFIER");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel1.add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 460, 130, 45));

        jLabel8.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("RECHERCHER");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 170, 32));

        txtsearch.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtsearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, 275, 37));

        jButton1.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 153));
        jButton1.setIcon(new javax.swing.ImageIcon("/home/prince/Téléchargements/3925426-print-printer-printing-icon_111556.png")); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 450, 120, 46));

        date_ariv.setDateFormatString("dd/MM/yyyy");
        date_ariv.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
        date_ariv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                date_arivFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                date_arivFocusLost(evt);
            }
        });
        date_ariv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                date_arivKeyPressed(evt);
            }
        });
        jPanel1.add(date_ariv, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 190, 46));

        date_dep.setDateFormatString("dd/MM/yyyy");
        date_dep.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
        jPanel1.add(date_dep, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 190, 46));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void Resetdata() {

        txtclient.setText("");
        txtchambre.setText("");
        date_ariv.setDate(null);
        date_dep.setDate(null);
    }
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased

        // TODO add your handling code here:
        int ligneSelectionnee = jTable1.getSelectedRow();

        // Récupère les données de la ligne sélectionnée
        String clientId = jTable1.getValueAt(ligneSelectionnee, 1).toString();
        String chambreId = jTable1.getValueAt(ligneSelectionnee, 2).toString();

        // Convertit les dates en format Date
        Date dateArrivee = null;
        Date dateDepart = null;
        try {
            dateArrivee = new SimpleDateFormat("dd/MM/yyyy").parse(jTable1.getValueAt(ligneSelectionnee, 3).toString());
            dateDepart = new SimpleDateFormat("dd/MM/yyyy").parse(jTable1.getValueAt(ligneSelectionnee, 4).toString());
        } catch (ParseException ex) {
            Logger.getLogger(Reservations.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }

        // Met à jour les champs de texte
        txtclient.setText(clientId);
        txtchambre.setText(chambreId);

        // Met à jour les composants de date
        date_ariv.setDate(dateArrivee);
        date_dep.setDate(dateDepart);

    }//GEN-LAST:event_jTable1MouseReleased

    private void txtclientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtclientKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtchambre.requestFocus();
        }
    }//GEN-LAST:event_txtclientKeyPressed

    private void txtchambreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchambreKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            date_ariv.requestFocus();
        }
    }//GEN-LAST:event_txtchambreKeyPressed

    private void AddReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReservationActionPerformed
        // TODO add your handling code here:

        rm.idCli = txtclient.getText();
        rm.idCh = txtchambre.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        // Récupère la date sélectionnée dans le composant date_ariv
        Date dateArrivee = date_ariv.getDate();

        // Récupère la date sélectionnée dans le composant date_dep
        Date dateDepart = date_dep.getDate();
        try {

            // Compare les deux dates
            int comparaison = dateArrivee.compareTo(dateDepart);

            // Si la date d'arrivée est supérieure à la date de départ
            if (comparaison > 0) {
                // Affiche un message d'erreur
                JOptionPane.showMessageDialog(null, "La date d'arrivée doit être inférieure ou égale à la date de départ.");
            } else {
                // Assigne la date formatée à la propriété date_arrive de l'objet rm
                rm.date_arrive = dateFormat.format(dateArrivee);
                rm.date_depart = dateFormat.format(dateDepart);
            }
        } catch (NullPointerException e) {
            // Affiche un message d'erreur
            JOptionPane.showMessageDialog(null, "La date d'arrivée ou la date de départ est nulle. Veuillez sélectionner des dates valides.");
        }

        ab.addReservation(rm.idCli, rm.idCh, rm.date_arrive, rm.date_depart, jTable1);
        Resetdata();

    }//GEN-LAST:event_AddReservationActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int ligne = 0;
        ligne = jTable1.getSelectedRow();
        //System.out.println("whaou : " + ligne);
        if (ligne < 0) {
            JOptionPane.showMessageDialog(null, "\n Veuillez sélectionner une ligne du tableau !!! \n");
        } else {
            int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());
            int id_ch = Integer.parseInt(jTable1.getValueAt(ligne, 2).toString());
            ab.DeleteReservation(id, jTable1, id_ch);
            Resetdata();
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:

        int ligne = 0;
        ligne = jTable1.getSelectedRow();
        //System.out.println("whaou : " + ligne);

        if (ligne < 0) {
            JOptionPane.showMessageDialog(null, "\n Veuillez sélectionner une ligne du tableau !!! \n");
        } else {
            int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());
            rm.idCli = txtclient.getText();
            rm.idCh = txtchambre.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            // Récupère la date sélectionnée dans le composant date_ariv
            Date dateArrivee = date_ariv.getDate();

            // Récupère la date sélectionnée dans le composant date_dep
            Date dateDepart = date_dep.getDate();
            try {

                // Compare les deux dates
                int comparaison = dateArrivee.compareTo(dateDepart);

                // Si la date d'arrivée est supérieure à la date de départ
                if (comparaison > 0) {
                    // Affiche un message d'erreur
                    JOptionPane.showMessageDialog(null, "La date d'arrivée doit être inférieure ou égale à la date de départ.");
                } else {
                    // Assigne la date formatée à la propriété date_arrive de l'objet rm
                    rm.date_arrive = dateFormat.format(dateArrivee);
                    rm.date_depart = dateFormat.format(dateDepart);
                }
            } catch (NullPointerException e) {
                // Affiche un message d'erreur
                JOptionPane.showMessageDialog(null, "La date d'arrivée ou la date de départ est nulle. Veuillez sélectionner des dates valides.");
            }

            ab.ModifyReservation(id, rm.idCli, rm.idCh, rm.date_arrive, rm.date_depart, jTable1);
        }
        Resetdata();
    }//GEN-LAST:event_UpdateActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtsearchKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         MessageFormat header = new MessageFormat(" \n Liste des réservations: \n");
        MessageFormat footer = new MessageFormat("Page {0,number,integer}");
        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.PORTRAIT);
            jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, set, true);
            JOptionPane.showMessageDialog(null, "\n Printed successfully !");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "\n Erreur d'impression \n" + e.getMessage());
            e.printStackTrace();

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void date_arivFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_date_arivFocusGained

    }//GEN-LAST:event_date_arivFocusGained

    private void date_arivFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_date_arivFocusLost

    }//GEN-LAST:event_date_arivFocusLost

    private void date_arivKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_date_arivKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            date_dep.requestFocus();
        }
    }//GEN-LAST:event_date_arivKeyPressed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        TableS();
    }//GEN-LAST:event_txtsearchKeyReleased
    public void TableS() {
        String[] reservations = {"Reservation_N°", "Matricule_Client", "Chambre_N°", "Date d'arrivé", "Date de départ"};// tableau string pour afficher le noms des colonnes du Tableau jTable à l'écran
        String[] afficher = new String[5]; // Tableau "afficher" pour servir à stocker les informations de la tableau utilisateurs
        DefaultTableModel mod = new DefaultTableModel(null, reservations);
        String result = txtsearch.getText();
        PreparedStatement ps;
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");

            ps = con.prepareStatement("SELECT * FROM reservations WHERE (client_id LIKE ?) OR (chambre_id LIKE ?) OR (date_arrivee LIKE ?) OR (date_depart LIKE ?);");
            for (int i = 1; i < 5; i++) {
                ps.setString(i, "%" + result + "%");
            }
            if (result.indexOf("/") != -1) {
                Date dateresult = sdf.parse(result);
                String myDate = dateformat.format(dateresult);
                for (int i = 3; i < 5; i++) {
                    ps.setString(i, "%" + myDate + "%");
                }
            }

            rs = ps.executeQuery();// on stocke le résultat de la requête dans le resultStatement

            while (rs.next()) {
                afficher[0] = rs.getString("reservation_id");
                afficher[1] = rs.getString("client_id");
                afficher[2] = rs.getString("chambre_id");
                //afficher[3] = rs.getString("date_arrivee");
                afficher[4] = rs.getString("date_depart");
                //formate  la date d'arrivée
                String dateArrivee = sdf.format(rs.getDate("date_arrivee"));
                afficher[3] = dateArrivee;
                //Formate la date de départ 
                String dateDepart = sdf.format(rs.getDate("date_depart"));
                afficher[4] = dateDepart;

                mod.addRow(afficher);
            }
            jTable1.setModel(mod);
        } catch (Exception e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddReservation;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Update;
    public com.toedter.calendar.JDateChooser date_ariv;
    public com.toedter.calendar.JDateChooser date_dep;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable jTable1;
    public javax.swing.JTextField txtchambre;
    public javax.swing.JTextField txtclient;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
