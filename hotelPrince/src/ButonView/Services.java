/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ButonView;


import static DataBase.ConnectionBd.*;
import clients.clients;
import Menu.Menu;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author prince
 */
public class Services extends javax.swing.JInternalFrame {

    /**
     * Creates new form Services
     */
    
    ResultSet rs;
    PreparedStatement ps;
    String path2;
    
    public Services() {
        initComponents();
        Connect();
        Table();
        TablePlat();
        remove_title_bar();
        coloumnWidth();
        coloumnWidth2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void remove_title_bar() {
        putClientProperty("Clients.isPalette", Boolean.TRUE);
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setBorder(null);
    }
    public void coloumnWidth() {
        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(18);
        columnModel.getColumn(1).setPreferredWidth(21);
        columnModel.getColumn(2).setPreferredWidth(70);
        columnModel.getColumn(3).setPreferredWidth(22);
        columnModel.getColumn(4).setPreferredWidth(81);
        columnModel.getColumn(5).setPreferredWidth(40);
    }
    public void coloumnWidth2() {
        TableColumnModel columnModel = jTable2.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(18);
        columnModel.getColumn(1).setPreferredWidth(21);
        columnModel.getColumn(2).setPreferredWidth(70);
        columnModel.getColumn(3).setPreferredWidth(22);
        columnModel.getColumn(4).setPreferredWidth(81);
       
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_BoissonLibelle = new javax.swing.JTextField();
        txt_quantite = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Deletedrunk = new javax.swing.JButton();
        txt_prixUnitaire = new javax.swing.JTextField();
        AddDrunk = new javax.swing.JButton();
        ResetCommand = new javax.swing.JButton();
        Updatedrunk = new javax.swing.JButton();
        lblphoto = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTypeBoisson = new javax.swing.JComboBox<>();
        AddTof = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtsearchDrunk = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtcodeplat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLibellePlat = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPrixPlat = new javax.swing.JTextField();
        AddImgFOOD = new javax.swing.JButton();
        resetFoodData = new javax.swing.JButton();
        Addfood = new javax.swing.JButton();
        UpdateFood = new javax.swing.JButton();
        platphoto = new javax.swing.JLabel();
        Deletefood = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtTypePlat = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        searchfood = new javax.swing.JTextField();

        jTabbedPane1.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));
        jPanel1.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 204, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("URW Bookman", 0, 16)); // NOI18N
        jLabel1.setText("Code_Boisson");

        txtcode.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("URW Bookman", 0, 16)); // NOI18N
        jLabel2.setText("Type_Boisson");

        txt_BoissonLibelle.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txt_BoissonLibelle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_BoissonLibelleKeyPressed(evt);
            }
        });

        txt_quantite.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("URW Bookman", 0, 16)); // NOI18N
        jLabel3.setText("Quantité");

        Deletedrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Deletedrunk.setText("Supprimer");
        Deletedrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletedrunkActionPerformed(evt);
            }
        });

        txt_prixUnitaire.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txt_prixUnitaire.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_prixUnitaireKeyPressed(evt);
            }
        });

        AddDrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        AddDrunk.setText("Ajouter au stock");
        AddDrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDrunkActionPerformed(evt);
            }
        });

        ResetCommand.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        ResetCommand.setText("Annuler");
        ResetCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetCommandActionPerformed(evt);
            }
        });

        Updatedrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Updatedrunk.setText("Modifier");
        Updatedrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatedrunkActionPerformed(evt);
            }
        });

        lblphoto.setBackground(new java.awt.Color(255, 255, 255));
        lblphoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        lblphoto.setOpaque(true);

        jLabel10.setFont(new java.awt.Font("URW Bookman", 0, 16)); // NOI18N
        jLabel10.setText("Prix Unitaire");

        jLabel11.setFont(new java.awt.Font("P052", 0, 16)); // NOI18N
        jLabel11.setText("Libellé_Boisson");

        txtTypeBoisson.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtTypeBoisson.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vin", "Liqueur", "Bière", "Whisky" }));

        AddTof.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        AddTof.setText("Ajouter une image");
        AddTof.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTofActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTypeBoisson, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_BoissonLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_prixUnitaire, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(AddTof)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(AddDrunk)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ResetCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Updatedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Deletedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblphoto, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTypeBoisson, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_BoissonLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_prixUnitaire, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addComponent(AddTof, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddDrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Updatedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Deletedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 526));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(0, 204, 102));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, 480, 269));

        jLabel4.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/service/IMAGE/analysis_analytics_magnifier_search_locate_magnifyng_glass_icon_153884.png"))); // NOI18N
        jLabel4.setText("RECHERCHER");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, 171, -1));

        jButton1.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 51, 153));
        jButton1.setText("Print");
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 450, 136, 54));

        txtsearchDrunk.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        txtsearchDrunk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchDrunkKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchDrunkKeyReleased(evt);
            }
        });
        jPanel1.add(txtsearchDrunk, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 110, 271, 36));

        jTabbedPane1.addTab("Gestion de Bar", jPanel1);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));
        jPanel2.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(153, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel5.setText("Code_Plat");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 36, 127, 37));

        txtcodeplat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jPanel5.add(txtcodeplat, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 36, 154, 37));

        jLabel6.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel6.setText("Libéllé plat");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 127, 37));

        txtLibellePlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtLibellePlat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLibellePlatKeyPressed(evt);
            }
        });
        jPanel5.add(txtLibellePlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 154, 37));

        jLabel8.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel8.setText("Prix Unitaire");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 127, 37));

        txtPrixPlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jPanel5.add(txtPrixPlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 154, 37));

        AddImgFOOD.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        AddImgFOOD.setText("Ajouter une image");
        AddImgFOOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddImgFOODActionPerformed(evt);
            }
        });
        jPanel5.add(AddImgFOOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, 33));

        resetFoodData.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        resetFoodData.setText("Annuler");
        resetFoodData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetFoodDataActionPerformed(evt);
            }
        });
        jPanel5.add(resetFoodData, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 99, 33));

        Addfood.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        Addfood.setText("Ajouter au menu");
        Addfood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddfoodActionPerformed(evt);
            }
        });
        jPanel5.add(Addfood, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, -1, 33));

        UpdateFood.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        UpdateFood.setText("Modifer");
        UpdateFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateFoodActionPerformed(evt);
            }
        });
        jPanel5.add(UpdateFood, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 99, 33));

        platphoto.setBackground(new java.awt.Color(255, 255, 255));
        platphoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        platphoto.setOpaque(true);
        jPanel5.add(platphoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 174, 198));

        Deletefood.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        Deletefood.setText("Supprimer");
        Deletefood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletefoodActionPerformed(evt);
            }
        });
        jPanel5.add(Deletefood, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, -1, 33));

        jLabel12.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel12.setText("Type de plat");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 127, 37));

        txtTypePlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtTypePlat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrée", "Résistance", "Dessert" }));
        jPanel5.add(txtTypePlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 154, 37));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable2.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.setGridColor(new java.awt.Color(102, 102, 102));
        jTable2.setRowHeight(25);
        jTable2.setSelectionBackground(new java.awt.Color(255, 102, 102));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton6.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 51, 153));
        jButton6.setText("Print");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/service/IMAGE/analysis_analytics_magnifier_search_locate_magnifyng_glass_icon_153884.png"))); // NOI18N
        jLabel13.setText("RECHERCHER");
        jLabel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchfood.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        searchfood.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchfoodKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfoodKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(searchfood, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1211, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchfood, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Restaurant", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchfoodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfoodKeyReleased
        // TODO add your handling code here:
        TableResultFood();
    }//GEN-LAST:event_searchfoodKeyReleased

    private void searchfoodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfoodKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_searchfoodKeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            JasperDesign jdesign = JRXmlLoader.load("/home/prince/hotelReports/foodList.jrxml");
            JasperReport ireport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jPrint = JasperFillManager.fillReport(ireport, null, con);
            JasperViewer.viewReport(jPrint, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:

        int index = jTable2.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!
        DefaultTableModel m = (DefaultTableModel) jTable2.getModel();
        txtcodeplat.setText(m.getValueAt(index, 1).toString());
        txtTypePlat.setSelectedItem(m.getValueAt(index, 2).toString());
        txtLibellePlat.setText(m.getValueAt(index, 3).toString());
        txtPrixPlat.setText(m.getValueAt(index, 4).toString());

        // code pour afficher l'image s'il y'en a
        int id = Integer.parseInt(jTable2.getValueAt(index, 0).toString());
        try {
            ps = con.prepareStatement("SELECT imagePlat FROM GestionRestaurant WHERE id_plat = ?;");
            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                byte[] photo = rs.getBytes("imagePlat");
                // Convertir la photo en image
                Image image = ImageIO.read(new ByteArrayInputStream(photo));

                // Redimensionner l'image
                Image scaledImage = image.getScaledInstance(174, 198, Image.SCALE_SMOOTH);

                // Afficher l'image redimensionnée
                platphoto.setIcon(new ImageIcon(scaledImage));
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jTable2MouseReleased

    private void DeletefoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletefoodActionPerformed
        // TODO add your handling code here:
        int line = jTable2.getSelectedRow();
        int id = Integer.parseInt(jTable2.getValueAt(line, 0).toString());
        if (id < 0) {
            JOptionPane.showMessageDialog(null, "Veuillez d'abord sélectionner un plat !!!");
        } else {
            try {
                ps = con.prepareStatement("DELETE * FROM GestionBar WHERE id_plat = ?;");
                ps.setInt(1, id);
                ps.executeUpdate();
                ps = con.prepareStatement("ALTER TABLE GestionBar AUTO_INCREMENT = 0;");
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Opération effectuée avecsuccès !!!");
                TablePlat();
                ResetFoodData();

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_DeletefoodActionPerformed

    private void UpdateFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateFoodActionPerformed
        // TODO add your handling code here:
        int line = jTable2.getSelectedRow();
        int id = Integer.parseInt(jTable2.getValueAt(line, 0).toString());
        if (id < 0) {
            JOptionPane.showMessageDialog(null, "Veuillez d'abord sélectionner un plat !!!");
        } else {
            try {
                ps = con.prepareStatement("UPDATE GestionRestaurant SET codePlat = ?, typePlat = ?, libellePlat = ?, prixPlat = ? WHERE id_plat = ?;");
                for (int i = 1; i < 6; i++) {
                    ps.setString(i, txtcodeplat.getText());
                    ps.setString(i, txtTypePlat.getSelectedItem().toString());
                    ps.setString(i, txtLibellePlat.getText());
                    ps.setString(i, txtPrixPlat.getText());

                    ps.setInt(i, id);
                }

                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Modification effectuée avec succès !!!");
                TablePlat();
                ResetFoodData();

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_UpdateFoodActionPerformed

    private void AddfoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddfoodActionPerformed
        // TODO add your handling code here:
        String codePlat = txtcodeplat.getText();
        String LibellePlat = txtLibellePlat.getText();
        String price = txtPrixPlat.getText();

        if ("".equals(codePlat) || "".equals(LibellePlat) || "".equals(price)) {
            JOptionPane.showMessageDialog(null, "Informations incomplètes !!!");
        } else {
            try {
                ps = con.prepareStatement("INSERT INTO GestionRestaurant VALUES (null, ?, ?, ?, ?, ?) ;");

                ps.setString(1, txtcodeplat.getText());
                ps.setString(2, txtTypePlat.getSelectedItem().toString());
                ps.setString(3, txtLibellePlat.getText());
                ps.setString(4, txtPrixPlat.getText());

                InputStream is = new FileInputStream(new File(path2));
                ps.setBlob(5, is);
                ps.executeUpdate();

                ps.close();
                JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                TablePlat();
                ResetFoodData();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_AddfoodActionPerformed

    private void resetFoodDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetFoodDataActionPerformed
        // TODO add your handling code here:
        ResetFoodData();
    }//GEN-LAST:event_resetFoodDataActionPerformed

    private void AddImgFOODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddImgFOODActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("/home/prince/Téléchargements/Plat_img/")); // Définir le répertoire par défaut
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        //String path = f.getAbsolutePath();

        if (f != null) {
            String path = f.getAbsolutePath();

            try {
                BufferedImage bi = ImageIO.read(f);
                Image img = bi.getScaledInstance(174, 198, Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                platphoto.setIcon(icon);

                path2 = path;
            } catch (IOException e) {
                Logger.getLogger(clients.class.getName()).log(Level.SEVERE, null, e);
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } else {
            System.out.println("Aucun fichier n'a été sélectionné.");
            JOptionPane.showMessageDialog(null, "Aucun fichier n'a été sélectionné.");
        }
    }//GEN-LAST:event_AddImgFOODActionPerformed

    private void txtLibellePlatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLibellePlatKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtPrixPlat.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtLibellePlatKeyPressed

    private void txtsearchDrunkKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchDrunkKeyReleased
        // TODO add your handling code here:
        TableS();
    }//GEN-LAST:event_txtsearchDrunkKeyReleased

    private void txtsearchDrunkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchDrunkKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtsearchDrunkKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            JasperDesign jdesign = JRXmlLoader.load("/home/prince/hotelReports/serviceList.jrxml");
            JasperReport ireport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jPrint = JasperFillManager.fillReport(ireport, null, con);
            JasperViewer.viewReport(jPrint, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        int index = jTable1.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!
        DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
        txtcode.setText(m.getValueAt(index, 1).toString());
        txtTypeBoisson.setSelectedItem(m.getValueAt(index, 2).toString());
        txt_BoissonLibelle.setText(m.getValueAt(index, 3).toString());
        txt_prixUnitaire.setText(m.getValueAt(index, 4).toString());
        txt_quantite.setText(m.getValueAt(index, 5).toString());

        // code pour afficher l'image s'il y'en a
        int id = Integer.parseInt(jTable1.getValueAt(index, 0).toString());
        try {
            ps = con.prepareStatement("SELECT imageBoisson FROM GestionBar WHERE id_bar = ?;");
            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                byte[] photo = rs.getBytes("imageBoisson");
                // Convertir la photo en image
                Image image = ImageIO.read(new ByteArrayInputStream(photo));

                // Redimensionner l'image
                Image scaledImage = image.getScaledInstance(178, 201, Image.SCALE_SMOOTH);

                // Afficher l'image redimensionnée
                lblphoto.setIcon(new ImageIcon(scaledImage));
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void AddTofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTofActionPerformed
        // TODO add your handling code here:

        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("/home/prince/Téléchargements/boissons_img/")); // Définir le répertoire par défaut
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        //String path = f.getAbsolutePath();

        if (f != null) {
            String path = f.getAbsolutePath();

            try {
                BufferedImage bi = ImageIO.read(f);
                Image img = bi.getScaledInstance(178, 201, Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                lblphoto.setIcon(icon);

                path2 = path;
            } catch (IOException e) {
                Logger.getLogger(clients.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            System.out.println("Aucun fichier n'a été sélectionné.");
            JOptionPane.showMessageDialog(null, "Aucun fichier n'a été sélectionné.");
        }
    }//GEN-LAST:event_AddTofActionPerformed

    private void UpdatedrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatedrunkActionPerformed
        // TODO add your handling code here:
        int ligne = jTable1.getSelectedRow();
        if (ligne < 0) {

            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une ligne du tableau !");
        } else {

            int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());
            try {
                ps = con.prepareStatement("UPDATE GestionBar SET codeBoisson = ?, typeBoisson = ?, libelleBoisson = ?, prixBoisson = ?, quantite = ? WHERE id_bar = ?");
                ps.setString(1, txtcode.getText());
                ps.setString(2, txtTypeBoisson.getSelectedItem().toString());
                ps.setString(3, txt_BoissonLibelle.getText());
                ps.setString(4, txt_prixUnitaire.getText());
                ps.setString(5, txt_quantite.getText());
                ps.setInt(6, id);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                Table();
                ResetData();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_UpdatedrunkActionPerformed

    private void ResetCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetCommandActionPerformed
        // TODO add your handling code here:
        ResetData();
    }//GEN-LAST:event_ResetCommandActionPerformed

    private void AddDrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDrunkActionPerformed
        // TODO add your handling code here:

        if ("".equals(txtcode.getText()) || "".equals(txt_BoissonLibelle.getText()) || "".equals(txt_prixUnitaire.getText()) || "".equals(txt_quantite.getText())) {

            JOptionPane.showMessageDialog(null, " Informations Incomplètes ! )");

        } else {

            try {
                ps = con.prepareStatement("INSERT INTO GestionBar VALUES (null, ?, ?, ?, ?, ?, ?) ;");

                ps.setString(1, txtcode.getText());
                ps.setString(2, txtTypeBoisson.getSelectedItem().toString());
                ps.setString(3, txt_BoissonLibelle.getText());
                ps.setString(4, txt_prixUnitaire.getText());
                ps.setString(5, txt_quantite.getText());
                InputStream is = new FileInputStream(new File(path2));
                ps.setBlob(6, is);
                ps.executeUpdate();

                ps.close();
                JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                Table();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

            ResetData();
        }
    }//GEN-LAST:event_AddDrunkActionPerformed

    private void txt_prixUnitaireKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_prixUnitaireKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_quantite.requestFocus();
        }
    }//GEN-LAST:event_txt_prixUnitaireKeyPressed

    private void DeletedrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletedrunkActionPerformed
        // TODO add your handling code here:
        int ligne = jTable1.getSelectedRow();
        if (ligne < 0) {

            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une ligne du tableau !");
        } else {
            int dialogResult = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer cette donnée ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());

                try {
                    ps = con.prepareStatement("DELETE FROM GestionBar where id_Boissons = ?");
                    ps.setInt(1, id);
                    ps.executeUpdate();// Pour éxécuter la requête sql.
                    ps = con.prepareStatement("ALTER TABLE GestionBar AUTO_INCREMENT = 0;");
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                    Table();
                    ps.close();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "" + e.getMessage());
                }
            }

        }
    }//GEN-LAST:event_DeletedrunkActionPerformed

    private void txt_BoissonLibelleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_BoissonLibelleKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_prixUnitaire.requestFocus();
        }
    }//GEN-LAST:event_txt_BoissonLibelleKeyPressed

    public void ResetData() {

        txtcode.setText("");
        txtTypeBoisson.setSelectedItem(null);
        txt_BoissonLibelle.setText("");
        txt_prixUnitaire.setText("");
        txt_quantite.setText("");
        lblphoto.setIcon(null);

    }

    public void ResetFoodData() {
        txtcodeplat.setText("");
        txtTypePlat.setSelectedItem(null);
        txtLibellePlat.setText("");
        txtPrixPlat.setText("");

        platphoto.setIcon(null);
    }

    public void Table() {
        String[] GestionBar = {"N°", "Code_Boissons", "Type_Boissons", "Libéllé", "Prix", "Quantité"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, GestionBar);

        try {

            Statement st = con.createStatement();// variable statement pour intéragir avec la base de donées !!!

            rs = st.executeQuery("SELECT * FROM GestionBar");// on stocke le résultat de la requête dans le resultStatement

            while (rs.next()) {
                afficher[0] = rs.getString("id_bar");
                afficher[1] = rs.getString("codeBoisson");
                afficher[2] = rs.getString("typeBoisson");
                afficher[3] = rs.getString("libelleBoisson");
                afficher[4] = rs.getString("prixBoisson");
                afficher[5] = rs.getString("quantite");

                mod.addRow(afficher);
            }

            jTable1.setModel(mod);
            //con.close();

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    public void TableS() {
        String[] GestionBar = {"N°", "Code_Boissons", "Type_Boissons", "Libéllé", "Prix", "Quantité"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, GestionBar);
        String resultSearchDrunk = txtsearchDrunk.getText();
        try {

            ps = con.prepareStatement("SELECT * FROM GestionBar WHERE (codeBoisson LIKE ?) OR (typeBoisson LIKE ?) OR (libelleBoisson LIKE ?) OR (prixBoisson LIKE ?);");// on stocke le résultat de la requête dans le resultStatement
            for (int i = 1; i < 5; i++) {
                ps.setString(i, "%" + resultSearchDrunk + "%");
            }
            rs = ps.executeQuery();
            while (rs.next()) {
                afficher[0] = rs.getString("id_bar");
                afficher[1] = rs.getString("codeBoisson");
                afficher[2] = rs.getString("typeBoisson");
                afficher[3] = rs.getString("libelleBoisson");
                afficher[4] = rs.getString("prixBoisson");
                afficher[5] = rs.getString("quantite");

                mod.addRow(afficher);
            }

            jTable1.setModel(mod);
            //con.close();

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    public void TablePlat() {
        String[] GestionRestaurant = {"N°", "Code_Plat", "Type_Plat", "Libéllé", "Prix"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, GestionRestaurant);

        try {

            Statement st = con.createStatement();// variable statement pour intéragir avec la base de donées !!!

            rs = st.executeQuery("SELECT * FROM GestionRestaurant;");// on stocke le résultat de la requête dans le resultStatement

            while (rs.next()) {
                afficher[0] = rs.getString("id_plat");
                afficher[1] = rs.getString("codeplat");
                afficher[2] = rs.getString("typePlat");
                afficher[3] = rs.getString("libellePlat");
                afficher[4] = rs.getString("prixPlat");

                mod.addRow(afficher);
            }

            jTable2.setModel(mod);

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    public void TableResultFood() {
        String[] GestionRestaurant = {"N°", "Code_Plat", "Type_Plat", "Libéllé", "Prix"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, GestionRestaurant);
        String researchFood = searchfood.getText();

        try {

            ps = con.prepareStatement("SELECT * FROM GestionRestaurant WHERE (codeplat LIKE ?) OR (typePlat LIKE ?) OR (libellePlat LIKE ?) OR (prixPlat LIKE ?);");// on stocke le résultat de la requête dans le resultStatement
            for (int i = 1; i < 5; i++) {
                ps.setString(i, "%"+researchFood+"%");
            }
            while (rs.next()) {
                afficher[0] = rs.getString("id_plat");
                afficher[1] = rs.getString("codeplat");
                afficher[2] = rs.getString("typePlat");
                afficher[3] = rs.getString("libellePlat");
                afficher[4] = rs.getString("prixPlat");

                mod.addRow(afficher);
            }

            jTable2.setModel(mod);

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDrunk;
    private javax.swing.JButton AddImgFOOD;
    private javax.swing.JButton AddTof;
    private javax.swing.JButton Addfood;
    private javax.swing.JButton Deletedrunk;
    private javax.swing.JButton Deletefood;
    private javax.swing.JButton ResetCommand;
    private javax.swing.JButton UpdateFood;
    private javax.swing.JButton Updatedrunk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblphoto;
    private javax.swing.JLabel platphoto;
    private javax.swing.JButton resetFoodData;
    private javax.swing.JTextField searchfood;
    private javax.swing.JTextField txtLibellePlat;
    private javax.swing.JTextField txtPrixPlat;
    private javax.swing.JComboBox<String> txtTypeBoisson;
    private javax.swing.JComboBox<String> txtTypePlat;
    private javax.swing.JTextField txt_BoissonLibelle;
    private javax.swing.JTextField txt_prixUnitaire;
    private javax.swing.JTextField txt_quantite;
    private javax.swing.JTextField txtcode;
    private javax.swing.JTextField txtcodeplat;
    private javax.swing.JTextField txtsearchDrunk;
    // End of variables declaration//GEN-END:variables
}
