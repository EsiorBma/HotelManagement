/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package reservation;

import Menu.Menu;
import java.sql.*;
import static DataBase.ConnectionBd.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prince
 */
public class reservation extends javax.swing.JFrame {

    PreparedStatement pst;
    ResultSet rs;
    ReservationModel rm = new ReservationModel();
    Abstract_reservation ab = new Abstract_reservation() {
    };

    /**
     * Creates new form clients
     */
    String DATE_PAR_DEFAUT = "14/02/2022";

    public reservation() {
        initComponents();
        Connect();
        ab.Table(jTable1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtclient = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtchambre = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        AddReservation = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        date_ariv = new com.toedter.calendar.JDateChooser();
        date_dep = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSeparator1.setForeground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("C059", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reservation/booking_hotel_icon_141823.png"))); // NOI18N
        jLabel1.setText("INFORMATIONS SUR LES RÉSERVATIONS !!!");

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(0, 153, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txtclient.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtclient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtclientKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CLIENT_N°");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Date  d'arrivée");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("CHAMBRE_N°");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtchambre.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtchambre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtchambreKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Date de départ");
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AddReservation.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        AddReservation.setText("AJOUTER");
        AddReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReservationActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Delete.setText("ANNULER");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Update.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Update.setText("MODIFIER");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("RECHERCHER");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtsearch.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtsearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("MENU");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        date_ariv.setDateFormatString("dd/MM/yyyy");
        date_ariv.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N
        date_ariv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                date_arivFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                date_arivFocusLost(evt);
            }
        });
        date_ariv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                date_arivKeyPressed(evt);
            }
        });

        date_dep.setDateFormatString("dd/MM/yyyy");
        date_dep.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtclient, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtchambre, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                    .addComponent(date_ariv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(date_dep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(76, 76, 76))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtclient, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtchambre, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(date_ariv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(date_dep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 1202, 682);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // Si l'utilisateur clique sur le bouton "MENUE" , il sera automatiquement renvoyé sur le menue
        reservation.super.dispose();
        Menu m = new Menu();
        m.setVisible(true);

        /* La méthode dispose de la classe clients pour libérer les ressources  utilisés par la fenêtre, notamment la fermer  !!!
        Ensuite, une nouvelle instance de la classe "Menu" est créée et rendue visible avec la ligne
        "Menu m = new Menu(); m.setVisible(true);".
         */
    }//GEN-LAST:event_jButton1ActionPerformed

    public void Resetdata() {

        txtclient.setText("");
        txtchambre.setText("");
        date_ariv.setDate(null);
        date_dep.setDate(null);
    }
    private void AddReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReservationActionPerformed
        // TODO add your handling code here:

        rm.idCli = txtclient.getText();
        rm.idCh = txtchambre.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        // Récupère la date sélectionnée dans le composant date_ariv
        Date dateArrivee = date_ariv.getDate();

        // Récupère la date sélectionnée dans le composant date_dep
        Date dateDepart = date_dep.getDate();
        try {

            // Compare les deux dates
            int comparaison = dateArrivee.compareTo(dateDepart);

            // Si la date d'arrivée est supérieure à la date de départ
            if (comparaison > 0) {
                // Affiche un message d'erreur
                JOptionPane.showMessageDialog(null, "La date d'arrivée doit être inférieure ou égale à la date de départ.");
            } else {
                // Assigne la date formatée à la propriété date_arrive de l'objet rm
                rm.date_arrive = dateFormat.format(dateArrivee);
                rm.date_depart = dateFormat.format(dateDepart);
            }
        } catch (NullPointerException e) {
            // Affiche un message d'erreur
            JOptionPane.showMessageDialog(null, "La date d'arrivée ou la date de départ est nulle. Veuillez sélectionner des dates valides.");
        }

        ab.addReservation(rm.idCli, rm.idCh, rm.date_arrive, rm.date_depart, jTable1);
        Resetdata();


    }//GEN-LAST:event_AddReservationActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased

        // TODO add your handling code here:
        int ligneSelectionnee = jTable1.getSelectedRow();

        // Récupère les données de la ligne sélectionnée
        String clientId = jTable1.getValueAt(ligneSelectionnee, 1).toString();
        String chambreId = jTable1.getValueAt(ligneSelectionnee, 2).toString();

        // Convertit les dates en format Date
        Date dateArrivee = null;
        Date dateDepart = null;
        try {
            dateArrivee = new SimpleDateFormat("dd/MM/yyyy").parse(jTable1.getValueAt(ligneSelectionnee, 3).toString());
            dateDepart = new SimpleDateFormat("dd/MM/yyyy").parse(jTable1.getValueAt(ligneSelectionnee, 4).toString());
        } catch (ParseException ex) {
            Logger.getLogger(reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Met à jour les champs de texte
        txtclient.setText(clientId);
        txtchambre.setText(chambreId);

        // Met à jour les composants de date
        date_ariv.setDate(dateArrivee);
        date_dep.setDate(dateDepart);


    }//GEN-LAST:event_jTable1MouseReleased

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:

        int ligne = 0;
        ligne = jTable1.getSelectedRow();
        //System.out.println("whaou : " + ligne);

        if (ligne < 0) {
            JOptionPane.showMessageDialog(null, "\n Veuillez sélectionner une ligne du tableau !!! \n");
        } else {
            int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());
            rm.idCli = txtclient.getText();
            rm.idCh = txtchambre.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            // Récupère la date sélectionnée dans le composant date_ariv
            Date dateArrivee = date_ariv.getDate();

            // Récupère la date sélectionnée dans le composant date_dep
            Date dateDepart = date_dep.getDate();
            try {

                // Compare les deux dates
                int comparaison = dateArrivee.compareTo(dateDepart);

                // Si la date d'arrivée est supérieure à la date de départ
                if (comparaison > 0) {
                    // Affiche un message d'erreur
                    JOptionPane.showMessageDialog(null, "La date d'arrivée doit être inférieure ou égale à la date de départ.");
                } else {
                    // Assigne la date formatée à la propriété date_arrive de l'objet rm
                    rm.date_arrive = dateFormat.format(dateArrivee);
                    rm.date_depart = dateFormat.format(dateDepart);
                }
            } catch (NullPointerException e) {
                // Affiche un message d'erreur
                JOptionPane.showMessageDialog(null, "La date d'arrivée ou la date de départ est nulle. Veuillez sélectionner des dates valides.");
            }

            ab.ModifyReservation(id, rm.idCli, rm.idCh, rm.date_arrive, rm.date_depart, jTable1);
        }
        Resetdata();
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int ligne = 0;
        ligne = jTable1.getSelectedRow();
        //System.out.println("whaou : " + ligne);
        if (ligne < 0) {
            JOptionPane.showMessageDialog(null, "\n Veuillez sélectionner une ligne du tableau !!! \n");
        } else {
            int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());
            int id_ch = Integer.parseInt(jTable1.getValueAt(ligne, 2).toString());
            ab.DeleteReservation(id, jTable1, id_ch);
            Resetdata();
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void txtclientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtclientKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtchambre.requestFocus();
        }
    }//GEN-LAST:event_txtclientKeyPressed

    private void txtchambreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchambreKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            date_ariv.requestFocus();
        }
    }//GEN-LAST:event_txtchambreKeyPressed

    private void date_arivKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_date_arivKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            date_dep.requestFocus();
        }
    }//GEN-LAST:event_date_arivKeyPressed

    private void date_arivFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_date_arivFocusGained

    }//GEN-LAST:event_date_arivFocusGained

    private void date_arivFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_date_arivFocusLost

    }//GEN-LAST:event_date_arivFocusLost

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            TableS();
        }
    }//GEN-LAST:event_txtsearchKeyPressed
    public void TableS() {
        String[] reservations = {"N°", "N°_Client", "N°_Chambre", "Date d'arrivé", "Date de départ"};// tableau string pour afficher le noms des colonnes du Tableau jTable à l'écran
        String[] afficher = new String[5]; // Tableau "afficher" pour servir à stocker les informations de la tableau utilisateurs
        DefaultTableModel mod = new DefaultTableModel(null, reservations);
        String result = txtsearch.getText();
        PreparedStatement ps;
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");

            ps = con.prepareStatement("SELECT * FROM reservations WHERE (client_id LIKE ?) OR (chambre_id LIKE ?) OR (date_arrivee LIKE ?) OR (date_depart LIKE ?);");
            for (int i = 1; i < 5; i++) {
                ps.setString(i, "%" + result + "%");
            }
            if (result.indexOf("/") != -1) {
                Date dateresult = sdf.parse(result);
                String myDate = dateformat.format(dateresult);
                for (int i = 3; i < 5; i++) {
                    ps.setString(i, "%" + myDate + "%");
                }
            }

            rs = ps.executeQuery();// on stocke le résultat de la requête dans le resultStatement

            while (rs.next()) {
                afficher[0] = rs.getString("reservation_id");
                afficher[1] = rs.getString("client_id");
                afficher[2] = rs.getString("chambre_id");
                //afficher[3] = rs.getString("date_arrivee");
                afficher[4] = rs.getString("date_depart");
                //formate  la date d'arrivée
                String dateArrivee = sdf.format(rs.getDate("date_arrivee"));
                afficher[3] = dateArrivee;
                //Formate la date de départ 
                String dateDepart = sdf.format(rs.getDate("date_depart"));
                afficher[4] = dateDepart;

                mod.addRow(afficher);
            }
            jTable1.setModel(mod);
        } catch (Exception e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reservation().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddReservation;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Update;
    public com.toedter.calendar.JDateChooser date_ariv;
    public com.toedter.calendar.JDateChooser date_dep;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable jTable1;
    public javax.swing.JTextField txtchambre;
    public javax.swing.JTextField txtclient;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
