/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package service;

import static DataBase.ConnectionBd.*;
import Menu.Menu;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;

/**
 *
 * @author prince
 */
public class Consommaton extends javax.swing.JFrame {

    /**
     * Creates new form Services
     */
    ResultSet rs;
    PreparedStatement ps;

    public Consommaton() {
        initComponents();
        Connect();
        TableCommandeBoisson();
        TablePlatCommande();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtclienID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBoissonLibelle = new javax.swing.JTextField();
        txtquantiteboisson = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Deletedrunk = new javax.swing.JButton();
        AddDrunk = new javax.swing.JButton();
        ResetCommand = new javax.swing.JButton();
        Updatedrunk = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtcategorie = new javax.swing.JComboBox<>();
        totacmdDrunk = new javax.swing.JButton();
        txtTotalDrunk = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtdateCommande = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        txtnomclient = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtboissonID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPU = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtcmdDrunk = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txt_id_plat = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_LibellePlat = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_PrixPlat = new javax.swing.JTextField();
        calculerTotalprixPlat = new javax.swing.JButton();
        resetcommandPlat = new javax.swing.JButton();
        Addcom_plat = new javax.swing.JButton();
        UpdatecommandePlat = new javax.swing.JButton();
        DeletecommandePlat = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txt_TypePlat = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txt_nom_cli_plat = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_total_prix_plat = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtid_cli_plat = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_datecommandeplat = new com.toedter.calendar.JDateChooser();
        txt_quantite_plat = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        searchfood = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setFont(new java.awt.Font("C059", 0, 18)); // NOI18N

        jPanel1.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jLabel1.setText("ID-Client");

        txtclienID.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtclienID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtclienIDKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jLabel2.setText("Catégorie");

        txtBoissonLibelle.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtBoissonLibelle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBoissonLibelleKeyPressed(evt);
            }
        });

        txtquantiteboisson.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtquantiteboisson.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtquantiteboissonKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jLabel3.setText("Quantité");

        Deletedrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Deletedrunk.setText("Supprimer");
        Deletedrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletedrunkActionPerformed(evt);
            }
        });

        AddDrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        AddDrunk.setText("Ajouter à l'addition");
        AddDrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDrunkActionPerformed(evt);
            }
        });

        ResetCommand.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        ResetCommand.setText("Imprimer l'addition");
        ResetCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetCommandActionPerformed(evt);
            }
        });

        Updatedrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        Updatedrunk.setText("Modifier");
        Updatedrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatedrunkActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        jLabel11.setText("Libellé_Boisson");

        txtcategorie.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtcategorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vin", "Liqueur", "Bière", "Whisky" }));

        totacmdDrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        totacmdDrunk.setText("Calculer total");
        totacmdDrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totacmdDrunkActionPerformed(evt);
            }
        });

        txtTotalDrunk.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtTotalDrunk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalDrunkActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        jLabel14.setText("Date");

        txtdateCommande.setDateFormatString("dd/MM/yyyy");
        txtdateCommande.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N

        jLabel15.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jLabel15.setText("Nom Client");

        txtnomclient.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtnomclient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnomclientKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jLabel16.setText("ID-Boisson");

        txtboissonID.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N
        txtboissonID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtboissonIDKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jLabel7.setText("Prix Unitaire");

        txtPU.setEditable(false);
        txtPU.setFont(new java.awt.Font("P052", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtclienID, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtnomclient, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtboissonID, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtcategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtBoissonLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(txtdateCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtPU, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtquantiteboisson, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(totacmdDrunk)
                .addGap(6, 6, 6)
                .addComponent(txtTotalDrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(AddDrunk)
                .addGap(12, 12, 12)
                .addComponent(Updatedrunk)
                .addGap(12, 12, 12)
                .addComponent(Deletedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(ResetCommand))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtclienID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtnomclient, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtboissonID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtcategorie, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBoissonLibelle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdateCommande, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPU, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtquantiteboisson, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totacmdDrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtTotalDrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddDrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Updatedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Deletedrunk, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetCommand, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 630));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setGridColor(new java.awt.Color(102, 102, 102));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(0, 204, 102));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(653, 160, 578, 269));

        jLabel4.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/service/IMAGE/analysis_analytics_magnifier_search_locate_magnifyng_glass_icon_153884.png"))); // NOI18N
        jLabel4.setText("RECHERCHER");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(653, 93, 171, -1));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("MENU");
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1089, 6, 136, 54));

        txtcmdDrunk.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        txtcmdDrunk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcmdDrunkKeyPressed(evt);
            }
        });
        jPanel1.add(txtcmdDrunk, new org.netbeans.lib.awtextra.AbsoluteConstraints(866, 93, 271, 36));

        jTabbedPane1.addTab("Commande de Boissons", jPanel1);

        jPanel2.setFont(new java.awt.Font("Noto Serif CJK TC Black", 0, 14)); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel5.setText("ID_Plat");

        txt_id_plat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txt_id_plat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_id_platKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_id_platKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel6.setText("Libéllé plat");

        txt_LibellePlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txt_LibellePlat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_LibellePlatKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel8.setText("Date");

        txt_PrixPlat.setEditable(false);
        txt_PrixPlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N

        calculerTotalprixPlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        calculerTotalprixPlat.setText("Calculer total");
        calculerTotalprixPlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculerTotalprixPlatActionPerformed(evt);
            }
        });

        resetcommandPlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        resetcommandPlat.setText("Imprimer l'addition");
        resetcommandPlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetcommandPlatActionPerformed(evt);
            }
        });

        Addcom_plat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        Addcom_plat.setText("Ajouter à l'addition");
        Addcom_plat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Addcom_platActionPerformed(evt);
            }
        });

        UpdatecommandePlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        UpdatecommandePlat.setText("Modifer");
        UpdatecommandePlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatecommandePlatActionPerformed(evt);
            }
        });

        DeletecommandePlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        DeletecommandePlat.setText("Annuler");
        DeletecommandePlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletecommandePlatActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel12.setText("Type de plat");

        txt_TypePlat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txt_TypePlat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrée", "Résistance", "Dessert" }));

        jLabel9.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel9.setText("Nom Client");

        txt_nom_cli_plat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel10.setText("Quantité ");

        txt_total_prix_plat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel17.setText("ID_Client");

        txtid_cli_plat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txtid_cli_plat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtid_cli_platKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtid_cli_platKeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel18.setText("Prix du plat");

        txt_datecommandeplat.setDateFormatString("dd/MM/yyyy");
        txt_datecommandeplat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N

        txt_quantite_plat.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        txt_quantite_plat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_quantite_platKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_quantite_platKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_nom_cli_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_TypePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_LibellePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtid_cli_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_PrixPlat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_datecommandeplat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_quantite_plat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(calculerTotalprixPlat, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(txt_total_prix_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Addcom_plat)
                        .addGap(18, 18, 18)
                        .addComponent(UpdatecommandePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(DeletecommandePlat)
                        .addGap(18, 18, 18)
                        .addComponent(resetcommandPlat)))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtid_cli_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(txt_nom_cli_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(txt_id_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(txt_TypePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(txt_LibellePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(txt_datecommandeplat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_PrixPlat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_quantite_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculerTotalprixPlat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total_prix_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Addcom_plat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdatecommandePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DeletecommandePlat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(resetcommandPlat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable2.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.setGridColor(new java.awt.Color(102, 102, 102));
        jTable2.setRowHeight(25);
        jTable2.setSelectionBackground(new java.awt.Color(51, 255, 102));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton6.setBackground(new java.awt.Color(204, 204, 204));
        jButton6.setFont(new java.awt.Font("URW Bookman", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 153, 0));
        jButton6.setText("MENU");

        jLabel13.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/service/IMAGE/analysis_analytics_magnifier_search_locate_magnifyng_glass_icon_153884.png"))); // NOI18N
        jLabel13.setText("RECHERCHER");
        jLabel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchfood.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        searchfood.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchfoodKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(searchfood, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 144, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchfood, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Restaurant", jPanel2);

        jPanel3.setFont(new java.awt.Font("Noto Serif CJK HK Black", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1212, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Piscine", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(1237, 678));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DeletecommandePlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletecommandePlatActionPerformed
        // TODO add your handling code here:
        ResetFoodDataCommande();
     
    }//GEN-LAST:event_DeletecommandePlatActionPerformed

    private void AddDrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDrunkActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        Date datCmd = txtdateCommande.getDate();
        String myDate = dateFormat.format(datCmd);
        if ("".equals(txtclienID.getText()) || "".equals(txtBoissonLibelle.getText()) || "".equals(txtboissonID.getText()) || "".equals(txtquantiteboisson.getText()) || "".equals(myDate)) {

            JOptionPane.showMessageDialog(null, " Informations Incomplètes ! )");

        } else {

            try {
                ps = con.prepareStatement("INSERT INTO consommationBoisson VALUES (null, ?, ?, ?, ?, ?) ;");

                ps.setString(1, txtclienID.getText());
                ps.setString(2, txtboissonID.getText());
                ps.setString(3, myDate);
                ps.setString(4, txtquantiteboisson.getText());
                ps.setString(5, txtTotalDrunk.getText());

                ps.executeUpdate();
                ps = con.prepareStatement("UPDATE GestionBar SET  quantite = (quantite - ?) WHERE id_bar = ?");
                ps.setString(1, txtquantiteboisson.getText());
                ps.setString(2, txtboissonID.getText());
                ps.executeUpdate();
                ps.close();
                JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                TableCommandeBoisson();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

            ResetData();
        }

    }//GEN-LAST:event_AddDrunkActionPerformed

    private void totacmdDrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totacmdDrunkActionPerformed
        // TODO add your handling code here:
        double prix_cmdDrunk = Double.parseDouble(txtPU.getText());
        double qteDrunk = Double.parseDouble(txtquantiteboisson.getText());
        double totalDrunk = prix_cmdDrunk * qteDrunk;
        txtTotalDrunk.setText("" + totalDrunk);

    }//GEN-LAST:event_totacmdDrunkActionPerformed

    private void ResetCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetCommandActionPerformed
        // TODO add your handling code here:
        ResetData();
    }//GEN-LAST:event_ResetCommandActionPerformed

    private void DeletedrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletedrunkActionPerformed
        // TODO add your handling code here:
        int ligne = jTable1.getSelectedRow();
        if (ligne < 0) {

            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une ligne du tableau !");
        } else {
            int dialogResult = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer cette donnée ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());

                try {
                    ps = con.prepareStatement("DELETE FROM consommationBoisson WHERE id_cmBoisson = ?");
                    ps.setInt(1, id);
                    ps.executeUpdate();// Pour éxécuter la requête sql.
                    ps = con.prepareStatement("ALTER TABLE consommationBoisson AUTO_INCREMENT = 0;");
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                    TableCommandeBoisson();
                    ResetData();
                    ps.close();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "" + e.getMessage());
                }
            }

        }
    }//GEN-LAST:event_DeletedrunkActionPerformed

    private void UpdatedrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatedrunkActionPerformed
        // TODO add your handling code here:
        int ligne = jTable1.getSelectedRow();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        Date datCmd = txtdateCommande.getDate();
        String myDate = dateFormat.format(datCmd);
        if (ligne < 0) {

            JOptionPane.showMessageDialog(null, "Veuillez sélectionner une ligne du tableau !");
        } else {

            int id = Integer.parseInt(jTable1.getValueAt(ligne, 0).toString());
            try {
                ps = con.prepareStatement("UPDATE consommationBoisson SET client_id = ?, id_bar = ?, date_commande = ?, quantite_commande = ?, prix_total = ? WHERE id_cmBoisson = ?");
                ps.setString(1, txtclienID.getText());
                ps.setString(2, txtboissonID.getText());
                ps.setString(3, myDate);
                ps.setString(4, txtquantiteboisson.getText());
                ps.setString(5, txtTotalDrunk.getText());
                ps.setInt(6, id);
                ps.executeUpdate();
                ps = con.prepareStatement("UPDATE GestionBar SET  quantite = (quantite - ?) WHERE id_bar = ?");
                ps.setString(1, txtquantiteboisson.getText());
                ps.setString(2, txtboissonID.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                TableCommandeBoisson();
                ResetData();
                ps.close();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_UpdatedrunkActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        try {
            // TODO add your handling code here:
            int index = jTable1.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!
            DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
            txtclienID.setText(m.getValueAt(index, 1).toString());
            txtboissonID.setText(m.getValueAt(index, 2).toString());
            SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyy");
            Date date_cmd = dateformat.parse(jTable1.getValueAt(index, 3).toString());
            txtdateCommande.setDate(date_cmd);

            txtquantiteboisson.setText(m.getValueAt(index, 4).toString());
            txtTotalDrunk.setText(m.getValueAt(index, 5).toString());

            int id_cli = Integer.parseInt(jTable1.getValueAt(index, 1).toString());
            int id_Drunk = Integer.parseInt(jTable1.getValueAt(index, 2).toString());
            try {
                ps = con.prepareStatement("SELECT typeBoisson, libelleBoisson, prixBoisson FROM GestionBar WHERE id_bar = ?;");
                ps.setInt(1, id_Drunk);
                rs = ps.executeQuery();
                while (rs.next()) {
                    txtcategorie.setSelectedItem(rs.getString("typeBoisson"));
                    txtBoissonLibelle.setText(rs.getString("libelleBoisson"));
                    txtPU.setText(rs.getString("prixBoisson"));
                }
                ps.close();
                ps = con.prepareStatement("SELECT nom FROM clients WHERE client_id = ?;");
                ps.setInt(1, id_cli);
                rs = ps.executeQuery();
                while (rs.next()) {
                    txtnomclient.setText(rs.getString("nom"));
                }

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (ParseException ex) {
            Logger.getLogger(Consommaton.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Consommaton.super.dispose();
        Menu m = new Menu();
        m.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Addcom_platActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Addcom_platActionPerformed
        // TODO add your handling code here:
        String codePlat = txt_id_plat.getText();
        String LibellePlat = txt_LibellePlat.getText();
        String price = txt_PrixPlat.getText();
        String cli_id = txtid_cli_plat.getText();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        Date datCmd = txt_datecommandeplat.getDate();
        String myDate = dateFormat.format(datCmd);

        if ("".equals(codePlat) || "".equals(LibellePlat) || "".equals(price) || "".equals(cli_id)) {
            JOptionPane.showMessageDialog(null, "Informations incomplètes !!!");
        } else {
            try {
                ps = con.prepareStatement("INSERT INTO consommationPlat VALUES (null, ?, ?, ?, ?, ?) ;");

                ps.setString(1, txtid_cli_plat.getText());
                ps.setString(2, txt_id_plat.getText());
                ps.setString(3, myDate);
                ps.setString(4, txt_quantite_plat.getText());
                ps.setString(5, txt_total_prix_plat.getText());
                ps.executeUpdate();

                ps.close();
                JOptionPane.showMessageDialog(null, " Opération effectuée avec succès !!!");
                TablePlatCommande();
                ResetFoodDataCommande();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }

    }//GEN-LAST:event_Addcom_platActionPerformed

    private void calculerTotalprixPlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculerTotalprixPlatActionPerformed
        // TODO add your handling code here:
        int qte_plat = Integer.parseInt(txt_quantite_plat.getText());
        double price_food = Double.parseDouble(txt_PrixPlat.getText());
        double totalprice = price_food * (double) qte_plat;
        txt_total_prix_plat.setText("" + totalprice);

    }//GEN-LAST:event_calculerTotalprixPlatActionPerformed

    private void resetcommandPlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetcommandPlatActionPerformed
        // TODO add your handling code here:
        ResetFoodDataCommande();
    }//GEN-LAST:event_resetcommandPlatActionPerformed

    private void UpdatecommandePlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatecommandePlatActionPerformed
        // TODO add your handling code here:
        int line = jTable2.getSelectedRow();
        int id = Integer.parseInt(jTable2.getValueAt(line, 0).toString());
        if (id < 0) {
            JOptionPane.showMessageDialog(null, "Veuillez d'abord sélectionner une ligne du tableau !!!");
        } else {
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String date_cmd;
                date_cmd = sdf.format(txt_datecommandeplat.getDate());
                
                
                ps = con.prepareStatement("UPDATE consommationPlat SET client_id = ?, id_plat = ?, date_commande = ? quantite_plat = ?, prix_total = ? WHERE id_cmplat = ?;");
                for (int i = 1; i < 7; i++) {
                    ps.setString(i, txtid_cli_plat.getText());
                    ps.setString(i, txt_id_plat.getText());
                    ps.setString(i, date_cmd);
                    ps.setString(i, txt_quantite_plat.getText());
                    ps.setString(i, txt_total_prix_plat.getText());

                    ps.setInt(i, id);
                }

                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Modification effectuée avec succès !!!");
                TablePlatCommande();
                ResetFoodDataCommande();

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_UpdatecommandePlatActionPerformed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:
            int index = jTable2.getSelectedRow();// index stock l'indice de la ligne sélectionné du tableau !!!
            DefaultTableModel m = (DefaultTableModel) jTable2.getModel();
            txtid_cli_plat.setText(m.getValueAt(index, 1).toString());
            txt_id_plat.setText(m.getValueAt(index, 2).toString());
            SimpleDateFormat dateformat = new SimpleDateFormat("dd/MM/yyy");
            Date date_cmd = dateformat.parse(jTable2.getValueAt(index, 3).toString());
            txt_datecommandeplat.setDate(date_cmd);

            txt_quantite_plat.setText(m.getValueAt(index, 4).toString());
            txt_total_prix_plat.setText(m.getValueAt(index, 5).toString());

            int id_cli = Integer.parseInt(jTable2.getValueAt(index, 1).toString());
            int id_food = Integer.parseInt(jTable2.getValueAt(index, 2).toString());
            try {
                ps = con.prepareStatement("SELECT typePlat, libellePlat, prixPlat FROM GestionRestaurant WHERE id_plat = ?;");
                ps.setInt(1, id_food);
                rs = ps.executeQuery();
                while (rs.next()) {
                    txt_TypePlat.setSelectedItem(rs.getString("typePlat"));
                    txt_LibellePlat.setText(rs.getString("libellePlat"));
                    txt_PrixPlat.setText(rs.getString("prixPlat"));
                }
                ps.close();
                ps = con.prepareStatement("SELECT nom FROM clients WHERE client_id = ?;");
                ps.setInt(1, id_cli);
                rs = ps.executeQuery();
                while (rs.next()) {
                    txt_nom_cli_plat.setText(rs.getString("nom"));
                }

            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } catch (ParseException ex) {
            Logger.getLogger(Consommaton.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTable2MouseReleased

    private void txtcmdDrunkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcmdDrunkKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TableSearchDrunkcmd();
        }
    }//GEN-LAST:event_txtcmdDrunkKeyPressed

    private void searchfoodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfoodKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            TableResultFood();
        }
    }//GEN-LAST:event_searchfoodKeyPressed

    private void txt_LibellePlatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_LibellePlatKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_PrixPlat.requestFocus();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_LibellePlatKeyPressed

    private void txtBoissonLibelleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoissonLibelleKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //  txt_prixUnitaire.requestFocus();
        }
    }//GEN-LAST:event_txtBoissonLibelleKeyPressed

    private void txtnomclientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomclientKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomclientKeyPressed

    private void txtboissonIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtboissonIDKeyPressed
        // TODO add your handling code here:
        String id_drunk = txtboissonID.getText();
        try {
            ps = con.prepareStatement("SELECT typeBoisson, libelleBoisson, prixBoisson FROM GestionBar WHERE id_bar = ?");
            ps.setString(1, id_drunk);
            rs = ps.executeQuery();
            while (rs.next()) {
                txtcategorie.setSelectedItem(rs.getString("typeBoisson"));
                txtBoissonLibelle.setText(rs.getString("libelleBoisson"));
                txtPU.setText(rs.getString("prixBoisson"));

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txtboissonIDKeyPressed

    private void txtclienIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtclienIDKeyPressed
        // TODO add your handling code here:
        String id_cli = txtclienID.getText();
        try {
            ps = con.prepareStatement("SELECT nom FROM clients WHERE client_id = ? ;");
            ps.setString(1, id_cli);
            rs = ps.executeQuery();
            while (rs.next()) {
                String name = rs.getString("nom");
                txtnomclient.setText(name);

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txtclienIDKeyPressed

    private void txtquantiteboissonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtquantiteboissonKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            double prix_cmdDrunk = Double.parseDouble(txtPU.getText());
            String qteDrunkString = txtquantiteboisson.getText();
            double qteDrunk;

            if (!qteDrunkString.isEmpty()) {
                qteDrunk = Double.parseDouble(qteDrunkString);
                double totalDrunk = prix_cmdDrunk * qteDrunk;
                txtTotalDrunk.setText("" + totalDrunk);
            } else {
                JOptionPane.showMessageDialog(null, "Veuillez saisir une quantité.");
            }
        }
    }//GEN-LAST:event_txtquantiteboissonKeyPressed

    private void txtid_cli_platKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtid_cli_platKeyPressed
        // TODO add your handling code here:
        try {
            ps = con.prepareStatement("SELECT nom FROM clients WHERE client_id = ?;");
            ps.setString(1, txtid_cli_plat.getText());
            rs = ps.executeQuery();
            while (rs.next()) {
                txt_nom_cli_plat.setText(rs.getString("nom"));
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txtid_cli_platKeyPressed

    private void txt_id_platKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_platKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_id_platKeyPressed

    private void txt_quantite_platKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_quantite_platKeyPressed
        // TODO add your handling code here:
        /*
        int qte_plat = Integer.parseInt(txt_quantite_plat.getText());
        double price_food = Double.parseDouble(txt_PrixPlat.getText());
        double totalprice = price_food * (double) qte_plat;
        txt_total_prix_plat.setText("" + totalprice);
        */

    }//GEN-LAST:event_txt_quantite_platKeyPressed

    private void txtid_cli_platKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtid_cli_platKeyReleased
        // TODO add your handling code here:

        try {
            ps = con.prepareStatement("SELECT nom FROM clients WHERE client_id = ?;");
            ps.setString(1, txtid_cli_plat.getText());
            rs = ps.executeQuery();
            while (rs.next()) {
                txt_nom_cli_plat.setText(rs.getString("nom"));
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txtid_cli_platKeyReleased

    private void txt_id_platKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_id_platKeyReleased
        // TODO add your handling code here:
        try {
            ps = con.prepareStatement("SELECT typePlat, libellePlat, prixPlat FROM GestionRestaurant WHERE id_plat = ?;");
            ps.setString(1, txt_id_plat.getText());
            rs = ps.executeQuery();
            while (rs.next()) {
                txt_TypePlat.setSelectedItem(rs.getString("typePlat"));
                txt_LibellePlat.setText(rs.getString("libellePlat"));
                txt_PrixPlat.setText(rs.getString("prixPlat"));
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_txt_id_platKeyReleased

    private void txt_quantite_platKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_quantite_platKeyReleased
        // TODO add your handling code here:
        
        int qte_plat = Integer.parseInt(txt_quantite_plat.getText());
        double price_food = Double.parseDouble(txt_PrixPlat.getText());
        double totalprice = price_food * (double) qte_plat;
        txt_total_prix_plat.setText("" + totalprice);
    }//GEN-LAST:event_txt_quantite_platKeyReleased

    private void txtTotalDrunkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalDrunkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalDrunkActionPerformed
    public void ResetData() {

        txtclienID.setText("");
        txtnomclient.setText("");
        txtboissonID.setText("");
        txtcategorie.setSelectedItem(null);
        txtBoissonLibelle.setText("");
        txtdateCommande.setDate(null);
        txtPU.setText("");
        txtTotalDrunk.setText("");
        txtquantiteboisson.setText("");

    }

    public void ResetFoodDataCommande() {
        txt_id_plat.setText("");
        txt_TypePlat.setSelectedItem(null);
        txt_LibellePlat.setText("");
        txt_PrixPlat.setText("");
        txtid_cli_plat.setText("");
        txt_nom_cli_plat.setText("");
        txt_total_prix_plat.setText("");
        txt_quantite_plat.setText("");
        txt_datecommandeplat.setDate(null);

    }

    public void TableCommandeBoisson() {
        String[] Commande = {"N°", "ID_client", "ID_Boisson", "Date_commande", "Quantité", "Total"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, Commande);

        try {

            Statement st = con.createStatement();// variable statement pour intéragir avec la base de donées !!!

            rs = st.executeQuery("SELECT * FROM consommationBoisson");// on stocke le résultat de la requête dans le resultStatement
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String date_cmd;
            while (rs.next()) {
                afficher[0] = rs.getString("id_cmBoisson");
                afficher[1] = rs.getString("client_id");
                afficher[2] = rs.getString("id_bar");
                date_cmd = sdf.format(rs.getDate("date_commande"));
                afficher[3] = date_cmd;
                afficher[4] = rs.getString("quantite_commande");
                afficher[5] = rs.getString("prix_total");

                mod.addRow(afficher);
            }

            jTable1.setModel(mod);
            //con.close();

        } catch (Exception e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    public void TableSearchDrunkcmd() {
        String[] Commande = {"N°", "ID_client", "ID_Boisson", "Date_commande", "Quantité", "Total"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, Commande);
        String resultcmdDrunk = txtcmdDrunk.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date_cmd;
        String myDate = "";
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        try {

            ps = con.prepareStatement("SELECT * FROM consommationBoisson WHERE (client_id LIKE ?) OR (id_bar LIKE ?) OR (date_commande LIKE ?) OR (quantite_commande LIKE ?) OR (prix_total LIKE ?);");// on stocke le résultat de la requête dans le resultStatement
            for (int i = 1; i <= 5; i++) {
                ps.setString(i, "%" + resultcmdDrunk + "%");
            }
            if (resultcmdDrunk.indexOf("/") != -1) {
                Date datCmd = sdf.parse(resultcmdDrunk);
                myDate = dateFormat.format(datCmd);
                ps.setString(3, "%" + myDate + "%");
            }

            rs = ps.executeQuery();
            while (rs.next()) {
                afficher[0] = rs.getString("id_cmBoisson");
                afficher[1] = rs.getString("client_id");
                afficher[2] = rs.getString("id_bar");
                date_cmd = sdf.format(rs.getDate("date_commande"));
                afficher[3] = date_cmd;
                afficher[4] = rs.getString("quantite_commande");
                afficher[5] = rs.getString("prix_total");

                mod.addRow(afficher);
            }

            jTable1.setModel(mod);
            //con.close();

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        } catch (ParseException ex) {
            Logger.getLogger(Consommaton.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }

    public void TablePlatCommande() {
        String[] consommationPlat = {"N°", "ID_Client", "ID_Plat", "Date_commande", "Quantité de plat", "Total"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, consommationPlat);

        try {

            Statement st = con.createStatement();// variable statement pour intéragir avec la base de donées !!!

            rs = st.executeQuery("SELECT * FROM consommationPlat;");// on stocke le résultat de la requête dans le resultStatement
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String date_cmd;
            while (rs.next()) {
                afficher[0] = rs.getString("id_cmplat");
                afficher[1] = rs.getString("client_id");
                afficher[2] = rs.getString("id_plat");
                date_cmd = sdf.format(rs.getDate("date_commande"));
                afficher[3] = date_cmd;
                afficher[4] = rs.getString("quantite_plat");
                afficher[5] = rs.getString("prix_total");

                mod.addRow(afficher);
            }

            jTable2.setModel(mod);

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    public void TableResultFood() {
        String[] GestionRestaurant = {"N°", "Code_Plat", "Type_Plat", "Libéllé", "Prix"};
        String[] afficher = new String[8];
        DefaultTableModel mod = new DefaultTableModel(null, GestionRestaurant);
        String researchFood = searchfood.getText();

        try {

            ps = con.prepareStatement("SELECT * FROM GestionRestaurant WHERE (codeplat LIKE ?) OR (typePlat LIKE ?) OR (libellePlat LIKE ?) OR (prixPlat LIKE ?);");// on stocke le résultat de la requête dans le resultStatement
            for (int i = 1; i < 5; i++) {
                ps.setString(i, researchFood);
            }
            while (rs.next()) {
                afficher[0] = rs.getString("id_plat");
                afficher[1] = rs.getString("codeplat");
                afficher[2] = rs.getString("typePlat");
                afficher[3] = rs.getString("libellePlat");
                afficher[4] = rs.getString("prixPlat");

                mod.addRow(afficher);
            }

            jTable2.setModel(mod);

        } catch (SQLException e) {
            e.printStackTrace();// Affiche l'erreur retourné dans le terminal si le try n'a pas pu être éxécuté 
            JOptionPane.showMessageDialog(null, " " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consommaton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consommaton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consommaton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consommaton.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consommaton().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDrunk;
    private javax.swing.JButton Addcom_plat;
    private javax.swing.JButton DeletecommandePlat;
    private javax.swing.JButton Deletedrunk;
    private javax.swing.JButton ResetCommand;
    private javax.swing.JButton UpdatecommandePlat;
    private javax.swing.JButton Updatedrunk;
    private javax.swing.JButton calculerTotalprixPlat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton resetcommandPlat;
    private javax.swing.JTextField searchfood;
    private javax.swing.JButton totacmdDrunk;
    private javax.swing.JTextField txtBoissonLibelle;
    private javax.swing.JTextField txtPU;
    private javax.swing.JTextField txtTotalDrunk;
    private javax.swing.JTextField txt_LibellePlat;
    private javax.swing.JTextField txt_PrixPlat;
    private javax.swing.JComboBox<String> txt_TypePlat;
    private com.toedter.calendar.JDateChooser txt_datecommandeplat;
    private javax.swing.JTextField txt_id_plat;
    private javax.swing.JTextField txt_nom_cli_plat;
    private javax.swing.JTextField txt_quantite_plat;
    private javax.swing.JTextField txt_total_prix_plat;
    private javax.swing.JTextField txtboissonID;
    private javax.swing.JComboBox<String> txtcategorie;
    private javax.swing.JTextField txtclienID;
    private javax.swing.JTextField txtcmdDrunk;
    private com.toedter.calendar.JDateChooser txtdateCommande;
    private javax.swing.JTextField txtid_cli_plat;
    private javax.swing.JTextField txtnomclient;
    private javax.swing.JTextField txtquantiteboisson;
    // End of variables declaration//GEN-END:variables
}
